#!/bin/bash
repos_path=$(git rev-parse --show-toplevel)

ask() {
  read -p "${1} [y/N] "

  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    return 1
  fi
}

merged_branches() {
  for branch in $(git branch -a --merged origin/master | grep -v master); do
    echo $branch
  done  
}

confirm_branches() {
  echo "READ THIS"
  echo "All the following branches will be deleted, make sure you're ok with it."
  echo "Typing q will exit the list but it won't delete branches, you'll be asked to confirm."
  echo ""
  
  for branch in $(merged_branches); do
    echo " * ${branch}"
  done
}

delete_branches() {
  for branch in $(merged_branches); do
    if echo $branch | grep -E "^remotes/origin" > /dev/null 2>&1; then
      local branch_name=$(basename "${branch}")
      
      echo "[${branch_name}] Removing local copy of remote branch"
      git branch -dr "origin/${branch_name}"

      echo "[${branch_name}] Removing branch from remote repos"
      git push origin ":${branch_name}"
    else
      echo "[${branch}] Removing local branch"
      git branch -d "${branch}"
    fi
  done
}

abort() {
  echo "Aborting..."
  exit 1
}

(
  cd $repos_path
  echo "Fetching from origin"
  git fetch origin
  
  confirm_branches | less

  ask "Are you sure you want to delete all listed branches?"

  if [[ $? -ne 0 ]]; then
    abort
  fi
  
  delete_branches
)